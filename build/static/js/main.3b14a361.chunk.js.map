{"version":3,"sources":["Images/ProfilePic/profile.jpg","Images/ProjectPics/EmployeeDB.png","Images/ProjectPics/SocialEarPiece.png","Images/ProjectPics/Druggler.png","Images/ProjectPics/Movie-Meme-Mash.png","Images/ProjectPics/WrkOutTrkrOFF.png","Images/ProjectPics/BudgetTrckrOFF.png","Components/Navbar.js","Components/BodyContainer.js","Pages/About.js","Components/ProjectCards.js","Pages/Projects.js","Pages/Contact.js","Components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","style","backgroundColor","Container","Grid","container","spacing","item","xs","sm","Typography","color","Breadcrumbs","aria-label","className","to","BodyContainer","maxWidth","justify","md","src","MattProfile","alt","maxHeight","textAlign","ButtonGroup","variant","Button","href","About","ProjectCard","Paper","EmployDB","SocialEarPiece","Druggler","MovieMeme","WrkOut","BdgtTrker","Projects","Contact","MainContainer","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b14a361.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.71b162bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/EmployeeDB.1a15151d.png\";","module.exports = __webpack_public_path__ + \"static/media/SocialEarPiece.a7055318.png\";","module.exports = __webpack_public_path__ + \"static/media/Druggler.25ed2e8f.png\";","module.exports = __webpack_public_path__ + \"static/media/Movie-Meme-Mash.724dd3b3.png\";","module.exports = __webpack_public_path__ + \"static/media/WrkOutTrkrOFF.b2b863a5.png\";","module.exports = __webpack_public_path__ + \"static/media/BudgetTrckrOFF.ed0abdec.png\";","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\n\n\nfunction NavBar() {\n\n    return (\n        <nav style={{ backgroundColor: \"lightblue\" }}>\n            <Container>\n                <Grid container spacing={12}>\n                    <Grid item xs={12} sm={10}>\n                        <Typography color=\"textPrimary\">MATTHEW ATCHLEY</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={2}>\n                        <Breadcrumbs aria-label=\"breadcrumb\">\n                            <Link\n                                className=\"link\" to=\"/\"\n                            > About </Link>\n                            <Link\n                                className=\"link\" to=\"/projects\"\n                            > Projects </Link>\n                            {/* <Link\n                                className=\"link\" to=\"/contact\"\n                            > Contact </Link> */}\n                        </Breadcrumbs>\n                    </Grid>\n                </Grid>\n            </Container>\n        </nav>\n    )\n}\n\nexport default NavBar;","import React from \"react\";\nimport MattProfile from \"../Images/ProfilePic/profile.jpg\"\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\nfunction BodyContainer() {\n    return (\n        <Container maxWidth=\"lg\">\n            <Grid container spacing={0} justify={\"space-evenly\"}>\n                <Grid item xs={12} md={3}>\n                    <img src={MattProfile} alt=\"Matthew Atchley\" style={{ maxHeight: \"340px\", maxWidth: \"300px\", textAlign: \"center\"}}></img>\n                </Grid>\n                <Grid item xs={12} md={9} style={{ backgroundColor: \"lightblue\" }}>\n                    <p>Front End Developer with a background in Anthropology and Customer Service wanting to create a more informed and accommodating UI for the web. Recently secured a certificate for Full Stack Development from UCSD, with the skills to work with JavaScript, React.js, CSS, MongoDB and SQL. Have several projects under my belt; Ranging from simple employee DBs to a group application that blended drug interactions with timer for when they take their prescriptions, with several more in the pipeline. Going into every project, I want the client to get the information they desire along with a little more that will send them out with a better sense of understanding. I am passionate about growing my skill set to allow me to connect with the client in a way they never thought they wanted.</p>\n                    <h2>Email: mattchley@gmail.com</h2>\n                    <Grid>\n                        <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n                            <Button href=\"https://github.com/mattchley\">GitHub Profile</Button>\n                            <Button href=\"https://www.linkedin.com/in/matthew-atchley-977238190/\">LinkedIN Profile</Button>\n                        </ButtonGroup>\n                    </Grid>\n\n                </Grid>\n\n\n            </Grid>\n        </Container>\n    )\n}\n\nexport default BodyContainer","import React from \"react\";\nimport BodyContainer from \"../Components/BodyContainer\"\nimport Container from '@material-ui/core/Container';\n\nfunction About() {\n    return (\n        <Container>\n            <h1 style={{ color: \"red\" }}>About Me!</h1>\n            <BodyContainer />\n        </Container>\n    )\n}\n\nexport default About","import React from \"react\";\nimport EmployDB from \"../Images/ProjectPics/EmployeeDB.png\";\nimport SocialEarPiece from \"../Images/ProjectPics/SocialEarPiece.png\";\nimport Druggler from \"../Images/ProjectPics/Druggler.png\";\nimport MovieMeme from \"../Images/ProjectPics/Movie-Meme-Mash.png\";\nimport WrkOut from \"../Images/ProjectPics/WrkOutTrkrOFF.png\";\nimport BdgtTrker from \"../Images/ProjectPics/BudgetTrckrOFF.png\";\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nfunction ProjectCard() {\n    return (\n        <Container maxWidth=\"lg\">\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={6}>\n                    <Paper >\n                        <h2>Node.js SQL EmployeeDB</h2>\n                        <img src={EmployDB} alt=\"Node.js SQL EmployeeDB\" style={{ maxHeight: \"340px\", maxWidth: \"300px\" }}></img>\n                        <p>Description of the project goes here!</p>\n                    </Paper>\n                    <Paper >\n                        <h2>Social Ear SocialEarPiece</h2>\n                        <img src={SocialEarPiece} alt=\"Social Ear SocialEarPiece\" style={{ maxHeight: \"340px\", maxWidth: \"300px\" }}></img>\n                        <p>Description of the project goes here!</p>\n                    </Paper>\n                    <Paper >\n                        <h2>Druggler</h2>\n                        <img src={Druggler} alt=\"Druggler\" style={{ maxHeight: \"340px\", maxWidth: \"300px\" }}></img>\n                        <p>Description of the project goes here!</p>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper >\n                        <h2>Movie Meme Mash</h2>\n                        <img src={MovieMeme} alt=\"Movie Meme Mash\" style={{ maxHeight: \"340px\", maxWidth: \"300px\" }}></img>\n                        <p>Description of the project goes here!</p>\n                    </Paper>\n                    <Paper >\n                        <h2>Weather App</h2>\n                        <img src={WrkOut}  alt=\"Weather App\" style={{ maxHeight: \"340px\", maxWidth: \"300px\" }}></img>\n                        <p>Description of the project goes here!</p>\n                    </Paper>\n                    <Paper >\n                        <h2>Node.js GitHub Profile Generator</h2>\n                        <img src={BdgtTrker} alt=\"Node.js GitHub Profile Generator\" style={{ maxHeight: \"340px\", maxWidth: \"300px\" }}></img>\n                        <p>Description of the project goes here!</p>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default ProjectCard","import React from \"react\";\nimport ProjectCard from \"../Components/ProjectCards\"\nimport Container from '@material-ui/core/Container';\n\nfunction Projects() {\n  return (\n    <Container>\n      <h1>Projects!</h1>\n      <ProjectCard />\n    </Container>\n  )\n}\n\nexport default Projects","import React from \"react\";\n\nfunction Contact() {\n  return (\n    <h1>Contact Me!</h1>\n  )\n}\n\nexport default Contact","import React from 'react';\nimport NavBar from './Navbar';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport About from '../Pages/About';\nimport Projects from '../Pages/Projects';\nimport Contact from '../Pages/Contact';\n\nfunction MainContainer() {\n    return (\n        <div>\n            <Router>\n                <NavBar />\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <About />\n                        </Route>\n\n                        <Route path=\"/projects\">\n                            <Projects />\n                        </Route>\n                        \n                        <Route path=\"/contact\">\n                            <Contact />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default MainContainer;","import React from \"react\";\nimport MainContainer from \"./Components/MainContainer\"\n\nfunction App() {\n  return (\n\n    <MainContainer />\n\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}